// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`user-flow help > should print global help 1`] = `
"cli.js

Run a set of user flows and save the result

Commands:
  cli.js init     Setup .user-flowrc.json
  cli.js collect  Run a set of user flows and save the result
  cli.js          Run a set of user flows and save the result          [default]
  cli.js assert   Setup .user-flowrc.json

Options:
      --version           Show version number                          [boolean]
  -v, --verbose           Run with verbose logging    [boolean] [default: false]
  -p, --rcPath            Path to user-flow.config.json. e.g.
                          \`./user-flowrc.json\`
                                         [string] [default: ".user-flowrc.json"]
  -i, --interactive       When false questions are skipped with the values from
                          the suggestions. This is useful for CI integrations.
                                                       [boolean] [default: true]
  -t, --url               URL to analyze                                [string]
  -u, --ufPath            folder containing user-flow files to run. (\`*.uf.ts\`
                          or \`*.uf.js\`)                                 [string]
  -l, --config            Lighthouse configuration (RC file only)       [string]
  -c, --configPath        Path to Lighthouse configuration e.g config.json
                                                                        [string]
  -s, --serveCommand      The npm command to serve your application. e.g. "npm
                          run serve:prod"                               [string]
  -w, --awaitServeStdout  A string in stdout resulting from serving the app, to
                          be awaited before start running the tests. e.g.
                          "server running..."                           [string]
  -d, --dryRun            Execute commands without effects             [boolean]
  -o, --outPath           output folder for the user-flow reports       [string]
  -f, --format            Report output formats e.g. JSON
                               [array] [choices: "html", "json", "md", "stdout"]
  -e, --openReport        Opens browser automatically after the user-flow is
                          collected. (true by default) [boolean] [default: true]
  -k, --budgetPath        Path to budgets.json                          [string]
  -j, --budgets           Performance budgets (RC file only)             [array]
  -h, --help              Show help                                    [boolean]

Examples:
  init  Setup user-flows over prompts
"
`;
