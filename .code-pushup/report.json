{
  "packageName": "@code-pushup/core",
  "version": "0.14.1",
  "date": "2024-02-05T17:11:09.460Z",
  "duration": 2092,
  "categories": [
    {
      "slug": "bug-prevention",
      "refs": [
        {
          "slug": "problems",
          "weight": 1,
          "type": "group",
          "plugin": "eslint"
        }
      ],
      "title": "Bug prevention"
    },
    {
      "slug": "code-style",
      "refs": [
        {
          "slug": "suggestions",
          "weight": 1,
          "type": "group",
          "plugin": "eslint"
        }
      ],
      "title": "Code style"
    }
  ],
  "plugins": [
    {
      "packageName": "@code-pushup/eslint-plugin",
      "version": "0.14.1",
      "title": "ESLint",
      "slug": "eslint",
      "icon": "eslint",
      "duration": 2077,
      "date": "2024-02-05T17:11:09.470Z",
      "audits": [
        {
          "slug": "typescript-eslint-ban-ts-comment",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow `@ts-<directive>` comments or require descriptions after directives",
          "description": "ESLint rule **ban-ts-comment**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/ban-ts-comment"
        },
        {
          "slug": "typescript-eslint-ban-types",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow certain types",
          "description": "ESLint rule **ban-types**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/ban-types"
        },
        {
          "slug": "typescript-eslint-no-array-constructor",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow generic `Array` constructors",
          "description": "ESLint rule **no-array-constructor**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-array-constructor"
        },
        {
          "slug": "typescript-eslint-no-duplicate-enum-values",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow duplicate enum member values",
          "description": "ESLint rule **no-duplicate-enum-values**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-duplicate-enum-values"
        },
        {
          "slug": "typescript-eslint-no-explicit-any",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow the `any` type",
          "description": "ESLint rule **no-explicit-any**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-explicit-any"
        },
        {
          "slug": "typescript-eslint-no-extra-non-null-assertion",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow extra non-null assertions",
          "description": "ESLint rule **no-extra-non-null-assertion**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-extra-non-null-assertion"
        },
        {
          "slug": "typescript-eslint-no-loss-of-precision",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow literal numbers that lose precision",
          "description": "ESLint rule **no-loss-of-precision**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-loss-of-precision"
        },
        {
          "slug": "typescript-eslint-no-misused-new",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Enforce valid definition of `new` and `constructor`",
          "description": "ESLint rule **no-misused-new**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-misused-new"
        },
        {
          "slug": "typescript-eslint-no-namespace",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow TypeScript namespaces",
          "description": "ESLint rule **no-namespace**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-namespace"
        },
        {
          "slug": "typescript-eslint-no-non-null-asserted-optional-chain",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow non-null assertions after an optional chain expression",
          "description": "ESLint rule **no-non-null-asserted-optional-chain**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-non-null-asserted-optional-chain"
        },
        {
          "slug": "typescript-eslint-no-this-alias",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow aliasing `this`",
          "description": "ESLint rule **no-this-alias**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-this-alias"
        },
        {
          "slug": "typescript-eslint-no-unnecessary-type-constraint",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unnecessary constraints on generic types",
          "description": "ESLint rule **no-unnecessary-type-constraint**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-unnecessary-type-constraint"
        },
        {
          "slug": "typescript-eslint-no-unsafe-declaration-merging",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unsafe declaration merging",
          "description": "ESLint rule **no-unsafe-declaration-merging**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-unsafe-declaration-merging"
        },
        {
          "slug": "typescript-eslint-no-unused-vars",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unused variables",
          "description": "ESLint rule **no-unused-vars**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/no-unused-vars"
        },
        {
          "slug": "typescript-eslint-prefer-as-const",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Enforce the use of `as const` over literal type",
          "description": "ESLint rule **prefer-as-const**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/prefer-as-const"
        },
        {
          "slug": "typescript-eslint-triple-slash-reference",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow certain triple slash directives in favor of ES6-style import declarations",
          "description": "ESLint rule **triple-slash-reference**, from _@typescript-eslint_ plugin.",
          "docsUrl": "https://typescript-eslint.io/rules/triple-slash-reference"
        },
        {
          "slug": "constructor-super",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Require `super()` calls in constructors",
          "description": "ESLint rule **constructor-super**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/constructor-super"
        },
        {
          "slug": "for-direction",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Enforce \"for\" loop update clause moving the counter in the right direction",
          "description": "ESLint rule **for-direction**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/for-direction"
        },
        {
          "slug": "getter-return",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Enforce `return` statements in getters",
          "description": "ESLint rule **getter-return**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/getter-return"
        },
        {
          "slug": "no-async-promise-executor",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow using an async function as a Promise executor",
          "description": "ESLint rule **no-async-promise-executor**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-async-promise-executor"
        },
        {
          "slug": "no-case-declarations",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow lexical declarations in case clauses",
          "description": "ESLint rule **no-case-declarations**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-case-declarations"
        },
        {
          "slug": "no-class-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow reassigning class members",
          "description": "ESLint rule **no-class-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-class-assign"
        },
        {
          "slug": "no-compare-neg-zero",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow comparing against -0",
          "description": "ESLint rule **no-compare-neg-zero**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-compare-neg-zero"
        },
        {
          "slug": "no-cond-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow assignment operators in conditional expressions",
          "description": "ESLint rule **no-cond-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-cond-assign"
        },
        {
          "slug": "no-const-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow reassigning `const` variables",
          "description": "ESLint rule **no-const-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-const-assign"
        },
        {
          "slug": "no-constant-condition",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow constant expressions in conditions",
          "description": "ESLint rule **no-constant-condition**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-constant-condition"
        },
        {
          "slug": "no-control-regex",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow control characters in regular expressions",
          "description": "ESLint rule **no-control-regex**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-control-regex"
        },
        {
          "slug": "no-debugger",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow the use of `debugger`",
          "description": "ESLint rule **no-debugger**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-debugger"
        },
        {
          "slug": "no-delete-var",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow deleting variables",
          "description": "ESLint rule **no-delete-var**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-delete-var"
        },
        {
          "slug": "no-dupe-args",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow duplicate arguments in `function` definitions",
          "description": "ESLint rule **no-dupe-args**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-dupe-args"
        },
        {
          "slug": "no-dupe-class-members",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow duplicate class members",
          "description": "ESLint rule **no-dupe-class-members**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-dupe-class-members"
        },
        {
          "slug": "no-dupe-else-if",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow duplicate conditions in if-else-if chains",
          "description": "ESLint rule **no-dupe-else-if**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-dupe-else-if"
        },
        {
          "slug": "no-dupe-keys",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow duplicate keys in object literals",
          "description": "ESLint rule **no-dupe-keys**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-dupe-keys"
        },
        {
          "slug": "no-duplicate-case",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow duplicate case labels",
          "description": "ESLint rule **no-duplicate-case**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-duplicate-case"
        },
        {
          "slug": "no-empty",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow empty block statements",
          "description": "ESLint rule **no-empty**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-empty"
        },
        {
          "slug": "no-empty-character-class",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow empty character classes in regular expressions",
          "description": "ESLint rule **no-empty-character-class**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-empty-character-class"
        },
        {
          "slug": "no-empty-pattern",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow empty destructuring patterns",
          "description": "ESLint rule **no-empty-pattern**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-empty-pattern"
        },
        {
          "slug": "no-ex-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow reassigning exceptions in `catch` clauses",
          "description": "ESLint rule **no-ex-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-ex-assign"
        },
        {
          "slug": "no-extra-boolean-cast",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unnecessary boolean casts",
          "description": "ESLint rule **no-extra-boolean-cast**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-extra-boolean-cast"
        },
        {
          "slug": "no-fallthrough",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow fallthrough of `case` statements",
          "description": "ESLint rule **no-fallthrough**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-fallthrough"
        },
        {
          "slug": "no-func-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow reassigning `function` declarations",
          "description": "ESLint rule **no-func-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-func-assign"
        },
        {
          "slug": "no-global-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow assignments to native objects or read-only global variables",
          "description": "ESLint rule **no-global-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-global-assign"
        },
        {
          "slug": "no-import-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow assigning to imported bindings",
          "description": "ESLint rule **no-import-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-import-assign"
        },
        {
          "slug": "no-inner-declarations",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow variable or `function` declarations in nested blocks",
          "description": "ESLint rule **no-inner-declarations**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-inner-declarations"
        },
        {
          "slug": "no-invalid-regexp",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow invalid regular expression strings in `RegExp` constructors",
          "description": "ESLint rule **no-invalid-regexp**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-invalid-regexp"
        },
        {
          "slug": "no-irregular-whitespace",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow irregular whitespace",
          "description": "ESLint rule **no-irregular-whitespace**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-irregular-whitespace"
        },
        {
          "slug": "no-misleading-character-class",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow characters which are made with multiple code points in character class syntax",
          "description": "ESLint rule **no-misleading-character-class**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-misleading-character-class"
        },
        {
          "slug": "no-new-symbol",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow `new` operators with the `Symbol` object",
          "description": "ESLint rule **no-new-symbol**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-new-symbol"
        },
        {
          "slug": "no-nonoctal-decimal-escape",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow `\\8` and `\\9` escape sequences in string literals",
          "description": "ESLint rule **no-nonoctal-decimal-escape**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-nonoctal-decimal-escape"
        },
        {
          "slug": "no-obj-calls",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow calling global object properties as functions",
          "description": "ESLint rule **no-obj-calls**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-obj-calls"
        },
        {
          "slug": "no-octal",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow octal literals",
          "description": "ESLint rule **no-octal**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-octal"
        },
        {
          "slug": "no-prototype-builtins",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow calling some `Object.prototype` methods directly on objects",
          "description": "ESLint rule **no-prototype-builtins**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-prototype-builtins"
        },
        {
          "slug": "no-redeclare",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow variable redeclaration",
          "description": "ESLint rule **no-redeclare**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-redeclare"
        },
        {
          "slug": "no-regex-spaces",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow multiple spaces in regular expressions",
          "description": "ESLint rule **no-regex-spaces**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-regex-spaces"
        },
        {
          "slug": "no-self-assign",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow assignments where both sides are exactly the same",
          "description": "ESLint rule **no-self-assign**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-self-assign"
        },
        {
          "slug": "no-setter-return",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow returning values from setters",
          "description": "ESLint rule **no-setter-return**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-setter-return"
        },
        {
          "slug": "no-shadow-restricted-names",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow identifiers from shadowing restricted names",
          "description": "ESLint rule **no-shadow-restricted-names**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-shadow-restricted-names"
        },
        {
          "slug": "no-sparse-arrays",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow sparse arrays",
          "description": "ESLint rule **no-sparse-arrays**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-sparse-arrays"
        },
        {
          "slug": "no-this-before-super",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow `this`/`super` before calling `super()` in constructors",
          "description": "ESLint rule **no-this-before-super**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-this-before-super"
        },
        {
          "slug": "no-undef",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow the use of undeclared variables unless mentioned in `/*global */` comments",
          "description": "ESLint rule **no-undef**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-undef"
        },
        {
          "slug": "no-unreachable",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unreachable code after `return`, `throw`, `continue`, and `break` statements",
          "description": "ESLint rule **no-unreachable**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-unreachable"
        },
        {
          "slug": "no-unsafe-finally",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow control flow statements in `finally` blocks",
          "description": "ESLint rule **no-unsafe-finally**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-finally"
        },
        {
          "slug": "no-unsafe-negation",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow negating the left operand of relational operators",
          "description": "ESLint rule **no-unsafe-negation**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-negation"
        },
        {
          "slug": "no-unsafe-optional-chaining",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow use of optional chaining in contexts where the `undefined` value is not allowed",
          "description": "ESLint rule **no-unsafe-optional-chaining**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-unsafe-optional-chaining"
        },
        {
          "slug": "no-unused-labels",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unused labels",
          "description": "ESLint rule **no-unused-labels**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-unused-labels"
        },
        {
          "slug": "no-useless-backreference",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow useless backreferences in regular expressions",
          "description": "ESLint rule **no-useless-backreference**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-useless-backreference"
        },
        {
          "slug": "no-useless-catch",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unnecessary `catch` clauses",
          "description": "ESLint rule **no-useless-catch**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-useless-catch"
        },
        {
          "slug": "no-useless-escape",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow unnecessary escape characters",
          "description": "ESLint rule **no-useless-escape**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-useless-escape"
        },
        {
          "slug": "no-with",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Disallow `with` statements",
          "description": "ESLint rule **no-with**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/no-with"
        },
        {
          "slug": "require-yield",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Require generator functions to contain `yield`",
          "description": "ESLint rule **require-yield**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/require-yield"
        },
        {
          "slug": "use-isnan",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Require calls to `isNaN()` when checking for `NaN`",
          "description": "ESLint rule **use-isnan**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/use-isnan"
        },
        {
          "slug": "valid-typeof",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Enforce comparing `typeof` expressions against valid strings",
          "description": "ESLint rule **valid-typeof**.",
          "docsUrl": "https://eslint.org/docs/latest/rules/valid-typeof"
        },
        {
          "slug": "nx-enforce-module-boundaries-9dba9763586d15c6",
          "displayValue": "passed",
          "value": 0,
          "score": 1,
          "details": {
            "issues": []
          },
          "title": "Ensure that module boundaries are respected within the monorepo",
          "description": "ESLint rule **enforce-module-boundaries**, from _@nx_ plugin.\n\nCustom options:\n\n```json\n{\n  \"enforceBuildableLibDependency\": true,\n  \"allow\": [],\n  \"depConstraints\": [\n    {\n      \"sourceTag\": \"*\",\n      \"onlyDependOnLibsWithTags\": [\n        \"*\"\n      ]\n    }\n  ]\n}\n```"
        }
      ],
      "description": "Official Code PushUp ESLint plugin",
      "docsUrl": "https://www.npmjs.com/package/@code-pushup/eslint-plugin",
      "groups": [
        {
          "slug": "problems",
          "refs": [
            {
              "slug": "typescript-eslint-ban-ts-comment",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-duplicate-enum-values",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-extra-non-null-assertion",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-loss-of-precision",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-misused-new",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-non-null-asserted-optional-chain",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-unsafe-declaration-merging",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-unused-vars",
              "weight": 1
            },
            {
              "slug": "constructor-super",
              "weight": 1
            },
            {
              "slug": "for-direction",
              "weight": 1
            },
            {
              "slug": "getter-return",
              "weight": 1
            },
            {
              "slug": "no-async-promise-executor",
              "weight": 1
            },
            {
              "slug": "no-class-assign",
              "weight": 1
            },
            {
              "slug": "no-compare-neg-zero",
              "weight": 1
            },
            {
              "slug": "no-cond-assign",
              "weight": 1
            },
            {
              "slug": "no-const-assign",
              "weight": 1
            },
            {
              "slug": "no-constant-condition",
              "weight": 1
            },
            {
              "slug": "no-control-regex",
              "weight": 1
            },
            {
              "slug": "no-debugger",
              "weight": 1
            },
            {
              "slug": "no-dupe-args",
              "weight": 1
            },
            {
              "slug": "no-dupe-class-members",
              "weight": 1
            },
            {
              "slug": "no-dupe-else-if",
              "weight": 1
            },
            {
              "slug": "no-dupe-keys",
              "weight": 1
            },
            {
              "slug": "no-duplicate-case",
              "weight": 1
            },
            {
              "slug": "no-empty-character-class",
              "weight": 1
            },
            {
              "slug": "no-empty-pattern",
              "weight": 1
            },
            {
              "slug": "no-ex-assign",
              "weight": 1
            },
            {
              "slug": "no-fallthrough",
              "weight": 1
            },
            {
              "slug": "no-func-assign",
              "weight": 1
            },
            {
              "slug": "no-import-assign",
              "weight": 1
            },
            {
              "slug": "no-inner-declarations",
              "weight": 1
            },
            {
              "slug": "no-invalid-regexp",
              "weight": 1
            },
            {
              "slug": "no-irregular-whitespace",
              "weight": 1
            },
            {
              "slug": "no-misleading-character-class",
              "weight": 1
            },
            {
              "slug": "no-new-symbol",
              "weight": 1
            },
            {
              "slug": "no-obj-calls",
              "weight": 1
            },
            {
              "slug": "no-prototype-builtins",
              "weight": 1
            },
            {
              "slug": "no-self-assign",
              "weight": 1
            },
            {
              "slug": "no-setter-return",
              "weight": 1
            },
            {
              "slug": "no-sparse-arrays",
              "weight": 1
            },
            {
              "slug": "no-this-before-super",
              "weight": 1
            },
            {
              "slug": "no-undef",
              "weight": 1
            },
            {
              "slug": "no-unreachable",
              "weight": 1
            },
            {
              "slug": "no-unsafe-finally",
              "weight": 1
            },
            {
              "slug": "no-unsafe-negation",
              "weight": 1
            },
            {
              "slug": "no-unsafe-optional-chaining",
              "weight": 1
            },
            {
              "slug": "no-useless-backreference",
              "weight": 1
            },
            {
              "slug": "use-isnan",
              "weight": 1
            },
            {
              "slug": "valid-typeof",
              "weight": 1
            }
          ],
          "title": "Problems",
          "description": "Code that either will cause an error or may cause confusing behavior. Developers should consider this a high priority to resolve."
        },
        {
          "slug": "suggestions",
          "refs": [
            {
              "slug": "typescript-eslint-ban-types",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-array-constructor",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-explicit-any",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-namespace",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-this-alias",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-no-unnecessary-type-constraint",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-prefer-as-const",
              "weight": 1
            },
            {
              "slug": "typescript-eslint-triple-slash-reference",
              "weight": 1
            },
            {
              "slug": "no-case-declarations",
              "weight": 1
            },
            {
              "slug": "no-delete-var",
              "weight": 1
            },
            {
              "slug": "no-empty",
              "weight": 1
            },
            {
              "slug": "no-extra-boolean-cast",
              "weight": 1
            },
            {
              "slug": "no-global-assign",
              "weight": 1
            },
            {
              "slug": "no-nonoctal-decimal-escape",
              "weight": 1
            },
            {
              "slug": "no-octal",
              "weight": 1
            },
            {
              "slug": "no-redeclare",
              "weight": 1
            },
            {
              "slug": "no-regex-spaces",
              "weight": 1
            },
            {
              "slug": "no-shadow-restricted-names",
              "weight": 1
            },
            {
              "slug": "no-unused-labels",
              "weight": 1
            },
            {
              "slug": "no-useless-catch",
              "weight": 1
            },
            {
              "slug": "no-useless-escape",
              "weight": 1
            },
            {
              "slug": "no-with",
              "weight": 1
            },
            {
              "slug": "require-yield",
              "weight": 1
            },
            {
              "slug": "nx-enforce-module-boundaries-9dba9763586d15c6",
              "weight": 1
            }
          ],
          "title": "Suggestions",
          "description": "Something that could be done in a better way but no errors will occur if the code isn't changed."
        }
      ]
    }
  ]
}